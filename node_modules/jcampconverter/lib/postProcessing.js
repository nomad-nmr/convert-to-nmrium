"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const add2D_1 = __importDefault(require("./2d/add2D"));
const complexChromatogram_1 = require("./complexChromatogram");
const postProcessingNMR_1 = __importDefault(require("./postProcessingNMR"));
const profiling_1 = __importDefault(require("./profiling"));
const simpleChromatogram_1 = __importDefault(require("./simpleChromatogram"));
function postProcessing(entriesFlat, result, options) {
    // converting Hz to ppm
    (0, postProcessingNMR_1.default)(entriesFlat);
    for (let entry of entriesFlat) {
        if (Object.keys(entry.ntuples).length > 0) {
            let newNtuples = [];
            let keys = Object.keys(entry.ntuples);
            for (let i = 0; i < keys.length; i++) {
                let key = keys[i];
                let values = entry.ntuples[key];
                for (let j = 0; j < values.length; j++) {
                    if (!newNtuples[j])
                        newNtuples[j] = {};
                    newNtuples[j][key] = values[j];
                }
            }
            entry.ntuples = newNtuples;
        }
        if (entry.twoD && options.wantXY) {
            (0, add2D_1.default)(entry, options);
            (0, profiling_1.default)(result, 'Finished countour plot calculation', options);
            if (!options.keepSpectra) {
                delete entry.spectra;
            }
        }
        // maybe it is a GC (HPLC) / MS. In this case we add a new format
        if (options.chromatogram) {
            if (entry.spectra.length > 1) {
                (0, complexChromatogram_1.complexChromatogram)(entry);
            }
            else {
                (0, simpleChromatogram_1.default)(entry);
            }
            (0, profiling_1.default)(result, 'Finished chromatogram calculation', options);
        }
        delete entry.tmp;
    }
}
exports.default = postProcessing;
//# sourceMappingURL=postProcessing.js.map