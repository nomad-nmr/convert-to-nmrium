import type { Molecule } from 'openchemlib';
import type { DataBaseStructure } from './dataStructure';
import type { Prediction1D } from './prediction1D';
export interface PredictCarbonOptions {
    /**
     * URL pointing to a database in json format
     */
    url?: string;
    /**
     *  custom database, each entry in the levels should has
     * an array as value [median] or [median, mean, sd, min, max, nb] for statistic purpose.
     */
    database?: DataBaseStructure;
    /**
     * URL of a webService that returns the prediction.
     */
    webserviceURL?: string;
    /**
     *  max level to take into account in the query. If is not specified
     * the max level in the database will be used.
     * @default 'maximum level in the database'
     */
    maxSphereSize?: number;
}
export declare type PredictCarbon = typeof predictCarbon;
/**
 * Make a query to a hose code based database to predict carbon chemical shift
 * @returns {Promise<object>} - object with molfile, diaIDs, signals, joined signals by diaIDs and ranges.
 */
export declare function predictCarbon(molecule: Molecule, options?: PredictCarbonOptions): Promise<Prediction1D>;
