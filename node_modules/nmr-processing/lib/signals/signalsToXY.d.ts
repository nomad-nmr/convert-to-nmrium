import type { Shape1D } from 'ml-peak-shape-generator';
import type { NMRSignal1D } from './NMRSignal1D';
export interface OptionsSignalsToXY {
    frequency?: number;
    /**
     * The low limit of the ordinate variable.
     * @default 0
     */
    from?: number;
    /**
     * The upper limit of the ordinate variable.
     * @default 10
     */
    to?: number;
    /**
     * Shape options for ml-spectrum-generator
     */
    shape?: Shape1D;
    /**
     * The linewidth of the output spectrum, expresed in Hz.
     * @default 1
     */
    lineWidth?: number;
    /**
     * Number of points of the output spectrum.
     * @default 16*1024
     */
    nbPoints?: number;
    /**
     * Default height of the simulated spectrum
     * @default 1e8
     */
    maxValue?: number;
    /**
     * Maximum number of atoms on each cluster that can be considered to be simulated together. It affects the the quality and speed of the simulation.
     * @default 8
     */
    maxClusterSize?: number;
}
/**
 * Generate a spectrum from an array of singals
 */
export declare function signalsToXY(signals: NMRSignal1D[], options?: OptionsSignalsToXY): import("cheminfo-types").DataXY<import("cheminfo-types").DoubleArray>;
