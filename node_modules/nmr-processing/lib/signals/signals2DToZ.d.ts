import type { XYNumber } from 'spectrum-generator';
import type { NMRSignal2D } from '../xyz/NMRSignal2D';
interface Signals2DToZOptions {
    /**
     * lower limit in the spectrum, if it is a number the value will be defined for both axes
     * @default -1
     */
    from?: number | XYNumber;
    /**
     * upper limit in the spectrum, if it is a number the value will be defined for both axes
     * @default 12
     */
    to?: number | XYNumber;
    /**
     * Number of points of each dimension of the spectrum,
     * if it is a number the value will be defined for both axes
     * @default 512
     */
    nbPoints?: number | XYNumber;
    /**
     * full width at half maximum of signals for each dimension,
     * if it is a number the value will be defined for both axes.
     * @default 0.02
     */
    width?: number | XYNumber;
}
export interface Peak2DSeries {
    x: number[];
    y: number[];
    z: number[];
}
export declare function signals2DToZ(signals: NMRSignal2D[], options?: Signals2DToZOptions): import("spectrum-generator").Spectrum2D;
export {};
