import { DataXY } from 'cheminfo-types';
/**
 * Function that returns a Number array of equally spaced numberOfPoints
 * containing a representation of intensities of the spectra arguments x
 * and y.
 *
 * The options parameter contains an object in the following form:
 * from: starting point
 * to: last point
 * numberOfPoints: number of points between from and to
 * variant: "slot" or "smooth" - smooth is the default option
 *
 * The slot variant consist that each point in an array is calculated
 * averaging the existing points between the slot that belongs to the current
 * value. The smooth variant is the same but takes the integral of the range
 * of the slot and divide by the step size between two points in an array.
 *
 * If exclusions zone are present, zones are ignored !
 *
 * @param arrayXY - object containing 2 properties x and y
 * @param options - options
 * @return new object with x / y array with the equally spaced data.
 */
export declare function xyEquallySpaced(arrayXY: DataXY, options?: {
    /** from
     * @default x[0]
     */
    from?: number;
    /** to
     * @default x[x.length - 1]
     */
    to?: number;
    /** variant
     * @default 'smooth'
     */
    variant?: string;
    /** number of points
     * @default 100
     */
    numberOfPoints?: number;
    /** array of from / to that should be skipped for the generation of the points
     * @default []
     */
    exclusions?: {
        from: number;
        to: number;
    }[];
    /** array of from / to that should be kept
     * @default []
     */
    zones?: {
        from: number;
        to: number;
    }[];
}): DataXY;
//# sourceMappingURL=xyEquallySpaced.d.ts.map